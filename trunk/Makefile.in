# Copyright (c) 2005 CNRS/LAAS
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

prefix=		@prefix@
exec_prefix=	@exec_prefix@
top_builddir=	.
top_srcdir=	@top_srcdir@
srcdir=		@srcdir@

BINDIR=		@bindir@
LIBDIR=		@libdir@
INCLUDEDIR=	@includedir@

SHELL=          /bin/bash
AWK=            @AWK@
CC=		@CC@
CXX=		@CXX@
LIBTOOL=	@LIBTOOL@
INSTALL=	@INSTALL@
INSTALL_DATA=   $(INSTALL) -m644
MKINSTALLDIRS=	$(SHELL) $(srcdir)/mkinstalldirs

LTCC=		$(LIBTOOL) --mode=compile $(CC)
LTCXX=		$(LIBTOOL) --mode=compile $(CXX)
LTLD=		$(LIBTOOL) --mode=link $(CXX)

CPPFLAGS=       @CPPFLAGS@ @BOOST_CPPFLAGS@ -I$(top_srcdir)
CFLAGS=         @CFLAGS@ @BOOST_CPPFLAGS@ $(CPPFLAGS)
CXXFLAGS=       @CXXFLAGS@ @BOOST_CPPFLAGS@ $(CPPFLAGS)

SHLIB_CURRENT=	0
SHLIB_REVISION=	0
SHLIB_AGE=	0
LIB=            libcrb.la

VPATH=		@srcdir@



############################################################
# component-dependend variable definitions:
#  driver components always enabled
#  @aci@ expands to ACI or NOACI depending on configure script
#  @GFXLIBS@ is set system OS-specific location of OpenGL in configure script
#  @blink@ expands to BLINK or NOBLINK depending on configure script
#  @ibou@ expands to IBOU or NOIBOU depending on configure script

@aci@LIBS=        @GFXLIBS@

DRVCSRCS=         drivers/fmod_ipdcmot.c \
                  drivers/fmod_tcp.c \
                  drivers/fmod_util.c \
                  drivers/sick.c \
                  drivers/util.c
DRVCXXSRCS=       drivers/FModIPDCMOT.cpp \
                  drivers/FModTCP.cpp \
                  sfl/Frame.cpp \
                  sfl/Line.cpp \
                  sfl/numeric.cpp \
                  sfl/Point.cpp \
                  sfl/Polygon.cpp \
                  util/Random.cpp
DRVBINCXXSRCS=    drivers/cfmod.cpp \
                  drivers/cipdcmot.cpp \
                  drivers/csick.cpp \
                  drivers/ctcp.cpp \
                  drivers/ttcp.cpp \
                  util/testrandom.cpp
DRVCHDRS=         drivers/fmod_ipdcmot.h \
                  drivers/fmod_tcp.h \
                  drivers/fmod_util.h \
                  drivers/sick.h \
                  drivers/util.h
DRVCXXHDRS=       drivers/FModIPDCMOT.hpp \
                  drivers/FModTCP.hpp \
                  sfl/Frame.hpp \
                  sfl/functors.hpp \
                  sfl/Line.hpp \
                  sfl/numeric.hpp \
                  sfl/pdebug.hpp \
                  sfl/Point.hpp \
                  sfl/Polygon.hpp \
                  util/Random.hpp

@aci@BINCXXSRC=   aci/fernandez.cpp
@aci@CXXSRCS=     aci/Behavior.cpp \
                  aci/Cactus.cpp \
                  aci/CircleLSQ.cpp \
                  aci/Effects.cpp \
                  aci/GUIHandler.cpp \
                  aci/Localizer.cpp \
                  aci/MotionManager.cpp \
                  aci/Odometry.cpp \
                  aci/Scanalyzer.cpp \
                  aci/Timeout.cpp \
                  aci/Timestamp.cpp \
                  aci/Watchdog.cpp \
                  gfx/Subwindow.cpp \
                  gfx/Viewport.cpp \
                  gfx/wrap_glu.cpp
@aci@CXXHDRS=     aci/Behavior.hpp \
                  aci/Cactus.hpp \
                  aci/CircleLSQ.hpp \
                  aci/Effects.hpp \
                  aci/GUIHandler.hpp \
                  aci/Localizer.hpp \
                  aci/MotionManager.hpp \
                  aci/Odometry.hpp \
                  aci/Scanalyzer.hpp \
                  aci/Timeout.hpp \
                  aci/Timestamp.hpp \
                  aci/Watchdog.hpp \
                  gfx/Mousehandler.hpp \
                  gfx/Subwindow.hpp \
                  gfx/Viewport.hpp \
                  gfx/wrap_gl.hpp \
                  gfx/wrap_glu.hpp \
                  gfx/wrap_glut.hpp

@blink@BINCXXSRC= blink/blinkd.cpp
@blink@CXXSRCS=   blink/Blink.cpp
@blink@CXXHDRS=   blink/Blink.hpp

@ibou@BINCXXSRC=  ibou/iboud.cpp
@ibou@CXXSRCS=    ibou/Action.cpp
@ibou@CXXHDRS=    ibou/Action.hpp



############################################################
# collect all component-dependend definitions into common sets

CSRCS=      $(DRVCSRCS)
CXXSRCS=    $(DRVCXXSRCS) $(ACICXXSRCS) $(BLINKCXXSRCS) $(IBOUCXXSRCS)
BINCXXSRCS= $(DRVBINCXXSRCS) $(ACIBINCXXSRC) $(BLINKBINCXXSRC) $(IBOUBINCXXSRC)
CHDRS=      $(DRVCHDRS)
CXXHDRS=    $(DRVCXXHDRS) $(ACICXXHDRS) $(BLINKCXXHDRS) $(IBOUCXXHDRS)

HEADERS=    $(CHDRS) $(CXXHDRS)
LOBJS=      $(CXXSRCS:%.cpp=%.lo) $(CSRCS:%.c=%.lo)



##################################################
# build rules

all: lib binaries

lib: $(LIB)

$(LIB): depend subdirs $(LOBJS)
	$(LTLD) -o $@ -rpath $(LIBDIR) -R$(LIBDIR) \
          -version-info $(SHLIB_CURRENT):$(SHLIB_REVISION):$(SHLIB_AGE) \
	  $(LOBJS)

# note: ACILIBS only non-empty if @aci@ enabled
binaries: depend subdirs $(BINCXXSRCS) $(LIB)
	for bin in $(BINCXXSRCS:%.cpp=%); do \
	  $(MAKE) $$bin.o; \
	  $(CXX) $(CXXFLAGS) -o $$bin $$bin.o \
                 -L.libs -lcrb -lpthread $(ACILIBS); \
	done
	echo "binaries built `date`" > binaries

#doc:
#	mkdir -p html
#	cp $(top_srcdir)/doxylogo.png html
#	doxygen
#	echo "doc build `date`" > doc

%.lo: %.c
	$(LTCC) $(CFLAGS) -o $*.o -c $<

%.lo: %.cpp
	$(LTCXX) $(CXXFLAGS) -o $*.o -c $<

subdirs:
	- mkdir aci blink drivers gfx ibou sfl util
	echo "subdirs created `date`" > subdirs

install:: $(LIB)
	$(MKINSTALLDIRS) $(LIBDIR)
	$(LIBTOOL) --mode=install $(INSTALL) $(LIB) $(LIBDIR)
	echo "installed `date`" > install

install:: cerebrate.pc
	$(MKINSTALLDIRS) $(LIBDIR)/pkgconfig
	$(INSTALL) cerebrate.pc $(LIBDIR)/pkgconfig
	echo "installed `date`" > install

install:: $(HEADERS)
	for header in $(HEADERS); do \
	  subdir=`dirname $$header`; \
	  $(MKINSTALLDIRS) $(INCLUDEDIR)/$$subdir; \
	  $(INSTALL_DATA) $(srcdir)/$$header $(INCLUDEDIR)/$$subdir; \
	done
	echo "installed `date`" > install

install:: binaries
	$(MKINSTALLDIRS) $(BINDIR)
	for bin in $(BINCXXSRCS:%.cpp=%); \
	  do \
	    $(LIBTOOL) --mode=install $(INSTALL) $$bin $(BINDIR); \
	done
	echo "installed `date`" > binaries

distclean: clean
	rm -f Makefile Doxyfile config.log config.status cerebrate.pc libtool
	rm -rf doc aci blink drivers gfx ibou sfl util

clean: 
	rm -f depend Makefile.depend install subdirs binaries
	$(LIBTOOL) --mode=clean rm -f $(LOBJS) $(LIB)
	- rm $(BINCXXSRCS:%.cpp=%.o) $(BINCXXSRCS:%.cpp=%)

depend:
	rm -f Makefile.depend
	for source in $(CXXSRCS) $(CSRCS); \
	  do \
	    subdir=`dirname $$source`; \
	    $(CC) -MM $(CPPFLAGS) $(top_srcdir)/$$source \
	      | $(AWK) -v subdir=$$subdir \
	'{if($$0~/^[^ ]/){sub(/o:/,"lo:"); print subdir "/" $$0} else print}' \
	     >> Makefile.depend; \
	done
	for source in $(BINCXXSRCS); \
	  do \
	    subdir=`dirname $$source`; \
	    $(CC) -MM $(CPPFLAGS) $(top_srcdir)/$$source \
	      | $(AWK) -v subdir=$$subdir \
	        '{if($$0~/^[^ ]/){print subdir "/" $$0} else print}' \
	     >> Makefile.depend; \
	done
	for source in $(BINCXXSRCS); \
	  do \
	    subdir=`dirname $$source`; \
	    exe=`basename $$source .cpp`; \
	    echo "$$subdir/$$exe: $$subdir/$$exe.o $(LIB)" \
                 >> Makefile.depend; \
	done
	echo "Makefile.depend written `date`" > depend

sinclude Makefile.depend
